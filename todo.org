* Bugs
** User mode thread_t.cpsr ends up 0x60000010 = irq, why?
** Returning thread functions hang the system.

* Features:
** main() creates threads using accessor functions in kernel.c
** Establish syscall patterns
*** Read register arguments
*** Return value in r0 register
*** Read from user mode buffer
*** Write to user mode buffer
** User mode can wait for timers.
** User mode can read from / write to console in a preemptible way.
** fork

* Nice features:
** Memory protection
*** Stack overflow detection
*** User-mode lockdown
** Dynamic allocation
** IPC
** Network I/O
** Disk I/O

* Nice:
** Rename interrupt -> exception where appropriate, including interrupt_table -> exception_table
** Logging boilerplate reduction
*** printf style message formatting
*** include file location (function name, file name, line number) in message using a macro
*** include failed assert condition in message using a macro
** Extract UNUSED and memset to a util file
** Use macro constants to refer to processor modes
** Tests
** Generate .h file with #define THREAD_OFFSET_* calculated with offsetof
** Assert register contents in the busy loop of second()
